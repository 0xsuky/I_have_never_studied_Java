// 상황 1
// 저장하게 되는 데이터의 수가 대략적으로 예측 가능함, 빈번한 데이터의 참조가 일어나는 상황에서 유용하게 사용할 수 있는 컬렉션 클래스는
// 무엇인가?
// => ArrayList -> 데이터 수를 대략적으로 예측할 수 있다면 ensureCapacity를 이용하여 크기를 적절히 잡으면
// resize로 인한 오버헤드를 줄일 수 있고, 데이터 참조가 LinkedList보다 훨씬 빠르다.

// 상황 2
// 저장하게 되는 데이터의 수가 예측 불가능하며, 빈번한 데이터의 저장 및 삭제가 일어나는 상황에서 유용하게 사용할 수 있는 컬렉션 클래스는
// 무엇인가?
// => LinkedList -> 저장하게 되는 데이터의 수가 예측 불가능하고 연산 자체가 저장 및 삭제가 빈번하면 삽입, 삭제 연산의 시간
// 복잡도가 훨씬 작은 LinkedList가 좋은 선택지라고 생각한다.